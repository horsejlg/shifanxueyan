<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config />  
  	<task:annotation-driven scheduler="scheduler" />
  	<task:scheduler id="scheduler" pool-size="5"/>  
    <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>  
  
    <context:component-scan base-package="cn.qlt"> 
    </context:component-scan>  
  
    <!-- 对标注@PersistenceContext的类经行增强，引入代理后的EntityManager实例 -->  
    <bean  
        class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />  
  
    <!-- 对标注@Repository的类经行增强，将EntityManager异常转换为SpringDAO体系的异常 -->  
    <bean  
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />  
  
    <!-- 属性文件 -->  
    <context:property-placeholder location="file:./conf/*.properties" />
    
    <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.SimpleDriverDataSource">  
        <property name="driverClass" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
    </bean>
    
    <!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        destroy-method="close">  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
  
        <property name="maxActive" value="50" />  
        <property name="initialSize" value="50" />  
        <property name="maxWait" value="6000" />  
        <property name="minIdle" value="10" />  
  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
  
        <property name="validationQuery" value="SELECT 'x'" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="true" />  
        <property name="testOnReturn" value="true" />  
        <property name="maxOpenPreparedStatements"  
            value="20" />  
    </bean>   -->

	<jpa:repositories base-package="cn.qlt.dao"  transaction-manager-ref="transactionManager" factory-class="cn.qlt.dao.BaseRepositoryFactoryBean" entity-manager-factory-ref="entityManagerFactory"/>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">   
        <property name="dataSource" ref="dataSource"/>  
        <property name="jpaVendorAdapter">
        	<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">  
        		<property name="databasePlatform" value="${hibernate.dialect}" />  
    		</bean>
        </property>  
        <property name="packagesToScan" value="cn.qlt.domain"/>
        <property name="jpaProperties">  
            <props>  
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> 
            </props>  
        </property>  
    </bean>
  
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="globalRollbackOnParticipationFailure" value="false"></property>  
    </bean>

</beans>
